# GitHub Actions workflow for Terraform Destroy
# @author Terraform DevOps
# @date 2025-01-15

name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm infrastructure destruction'
        required: true
        default: ''

env:
  TF_VERSION: '1.13.4'
  TF_VAR_docker_host: 'unix:///var/run/docker.sock'

jobs:
  destroy:
    name: 'Destroy Terraform Infrastructure'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Confirm Destruction
      run: |
        if [ "${{ github.event.inputs.confirm_destroy }}" != "destroy" ]; then
          echo "‚ùå Destruction not confirmed. Please type 'destroy' to confirm."
          exit 1
        fi
        echo "‚úÖ Destruction confirmed. Proceeding with terraform destroy..."

    - name: Terraform Init
      run: |
        echo "Initializing Terraform with provider signature handling..."
        terraform init -upgrade || {
          echo "Provider signature issue detected, trying alternative approach..."
          # Clear all terraform state and try again
          rm -rf .terraform
          terraform init || {
            echo "Still failing, trying with specific provider version..."
            # Force reinstall of specific provider version
            terraform init -upgrade -backend=false || terraform init
          }
        }
      working-directory: ./

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: ./

    - name: Notify Destruction Complete
      run: |
        echo "üóëÔ∏è Terraform destroy completed successfully!"
        echo "‚ö†Ô∏è All infrastructure has been destroyed!"
        echo "üí° Remember to clean up any remaining Docker volumes if needed."